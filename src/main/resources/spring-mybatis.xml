<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">  
  <!--1 自动扫描 将标注Spring注解的类自动转化Bean-->  
  <context:component-scan base-package="com.github.jptx1234.airapi" />  
  <!--2 加载数据资源属性文件 -->  
  <bean id="propertyConfigurer"  
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
    <property name="location" value="classpath:jdbc.properties" />  
  </bean>  
  <!-- 3 配置数据源 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
     <!-- 基本属性 url、user、password -->
     <property name="driverClassName" value="${driverClassName}" />
     <property name="url" value="${jdbc_url}" />
     <property name="username" value="${jdbc_username}" />
     <property name="password" value="${jdbc_password}" />
     
     <property name="validationQuery" value="${validationQuery}"></property>

     <!-- 配置监控统计拦截的filters -->
     <!-- <property name="filters" value="stat" /> -->

     <!-- 配置初始化大小、最小、最大 -->
     <property name="maxActive" value="20" />
     <property name="initialSize" value="1" />
     <property name="minIdle" value="1" />

     <!-- 配置获取连接等待超时的时间 -->
     <property name="maxWait" value="60000" />     

     <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
     <property name="timeBetweenEvictionRunsMillis" value="60000" />

     <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
     <property name="minEvictableIdleTimeMillis" value="300000" />

     <property name="testWhileIdle" value="true" />
     <property name="testOnBorrow" value="false" />
     <property name="testOnReturn" value="false" />

     <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
     <!-- <property name="poolPreparedStatements" value="true" />
     <property name="maxOpenPreparedStatements" value="20" /> -->
 </bean>
  <!-- 4   配置sessionfactory -->  
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
    <property name="dataSource" ref="dataSource" />  
    <!-- 自动扫描mapping.xml文件 -->  
    <!-- <property name="mapperLocations" value="classpath:com/github/jptx1234/airapi/dao/"></property> -->  
  </bean>  
  <!-- 5  装配dao接口 -->  
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
    <property name="basePackage" value="com.github.jptx1234.airapi.dao" /> <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
  </bean>  
  <!-- 6、声明式事务管理 -->  
  <bean id="transactionManager"  
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
    <property name="dataSource" ref="dataSource" />  
  </bean>  
  <!-- 7、注解事务切面 -->
  <tx:annotation-driven transaction-manager="transactionManager"/>  
</beans>  